% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ctYlm.Mlm.R
\name{ctYlm.Mglm}
\alias{ctYlm.Mglm}
\title{Cross Test in Mediation Analysis with Linear Models}
\usage{
ctYlm.Mglm(S, M, Y, X = NULL, s = 1, s_star = 0, M.family = stats::gaussian())
}
\arguments{
\item{S}{an n-by-1 vector for exposure.}

\item{M}{an n-by-1 matrix for mediator.}

\item{Y}{an n-by-1 vector for outcome.}

\item{X}{an n-by-p matrix for p confounders. Do not include intercept in matrix X. In the absence of confounders, matrix is not required to be specified.}

\item{s}{exposure level with default set at 1.}

\item{s_star}{baseline exposure level with default set at 0.}

\item{M.family}{the error distribution and link function for the mediator model. The default family is \code{gaussian()}.}
}
\value{
NIE refers to natural indirect effect, which is the estimated when a change of exposure S occurs from s_star to s. This return is absent when M.family is not \code{gaussian()}.

p_value_NIE refers to the AB p value for NIE.

NDE refers to natural direct effect, which is estimated when exposure S changes from s_star to s. This return is absent when M.family is not \code{gaussian()}.

p_value_NDE is the p value for NDE. This return is absent when M.family is not \code{gaussian()}.

NTE is the estimated natural total effect when exposure S changes from s_star to s. This return is absent when M.family is not \code{gaussian()}.

p_value_NTE is the p value for NTE. This return is absent when M.family is not \code{gaussian()}.
}
\description{
\code{ctYlm.Mglm} performs an cross test in mediation analysis in which mediator is modeled by a generalized linear model and outcome Y are modeled by a linear model.
}
\examples{
\donttest{
  ## Load libraries
  library(ctima)

  set.seed(2)


  ## Set up parameters
  M.family <- gaussian()
  Y.family <- gaussian()

  simulation <- function(alpha_S = 0, beta_M = 0) {
    data <- generate_all_data(
      n = 200,
      alpha_S = alpha_S,
      beta_M = beta_M,
      M.family = M.family,
      Y.family = Y.family
    )
    S <- data$S
    M <- data$M
    Y <- data$Y
    X <- data$X

    out <- ctYlm.Mglm(S, M, Y, X)
    out
  }


  simulation(1 / 4, 1 / 4)

  simulation(0, 0)


  ## Set up parameters
  M.family <- binomial()
  Y.family <- gaussian()

  simulation <- function(alpha_S = 0, beta_M = 0) {
    data <- generate_all_data(
      n = 200,
      alpha_S = alpha_S,
      beta_M = beta_M,
      M.family = M.family,
      Y.family = Y.family
    )
    S <- data$S
    M <- data$M
    Y <- data$Y
    X <- data$X

    out <- ctYlm.Mglm(S, M, Y, X, M.family = M.family)
    out
  }


  simulation(1 / 4, 1 / 4)

  simulation(0, 0)



}
}
\references{
Chen, C., Zhou, L., Song, P.X.K. (2025), "An Efficient Two-Way Cross Test for Mediation Effects with High Sensitivity to Weak Signals" arXiv preprint.
}
